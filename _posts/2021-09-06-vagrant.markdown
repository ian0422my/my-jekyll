---
layout: single
#classes: wide
title:  "Vagrant"
date:   2021-09-06 10:25:50 +0800
categories: vagrant
toc: true
toc_label: "In this page"
toc_icon: " "
toc_sticky: true
sidebar:
  nav: "about"
---

## Purpose

* ruby based
* to create a provider(VirtualBox, Hyper-V, Docker) and run it with a settings (predefined set of instructions)
* find the box you need @ <https://app.vagrantup.com/boxes/search> (please set proxy using http_proxy, https_proxy)
* ***must disable hyper-v and containers*** (windows feature)
* provisions
* plugins
* providers
  * must install the program on host first (e.g. docker desktop for docker)
  * list
    * VirtualBox (default)
      * hyper-v and virtualbox doesn't work well. if using virtualbox, then have to disable ***hyper-v*** and ***containers*** (windows features)
    * Hyper-V
    * Docker
      * docker-exec

```Vagrantfile
# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/trusty64"
  config.vm.box_url = "https://app.vagrantup.com/ubuntu/boxes/trusty64"
end
```

## list of exisitng boxes

<https://www.vagrantbox.es68>

## Create your own box

<https://scotch.io/tutorials/how-to-create-a-vagrant-base-box-from-an-existing-one>

## CLI

* extra
  * all cli can be debug with --debug
  * all cli output can be output to file using &> log.log
* vagrant plugin install <plugin name>
  * sometimes you might not be able to install if the certificate is self-signed, run this in cygwin @  How to configure Vagrant to ignore SSL certificate â€“ sleeplessbeastie's notes
    * linux

```sh
echo :ssl_verify_mode: 0 | tee ~/.gemrc 
```

    * window
      * create c:\users\<your nmae>\.gemrc 
			* edit and add content below
			* 
	* vagrant plugin expunge --reinstall
	* vagrant ssh-config
	* vagrant global-status - check vm running

```txt
:ssl_verify_mode: 0
```

## Troubleshooting

### cannot reload vagrant

```cmd
There was an error while executing `VBoxManage`, a CLI used by Vagrant
for controlling VirtualBox. The command and stderr is shown below.

Command: ["startvm", "fc202717-d4f4-4881-82f7-a5391f49f669", "--type", "headless"]

Stderr: VBoxManage.exe: error: The VM session was closed before any attempt to power it on
VBoxManage.exe: error: Details: code E_FAIL (0x80004005), component SessionMachine, interface ISession
```

* open Task Manager and remove all services that starts with "Virtual..."
* run "vagrant reload"

### run "vagrant ssh" and system complain "permission for private_key is too open"

* i notice that there are 2 ssh commnad "where ssh" in my system. 1 from Openssh and 1 from git. Openssh command is having issue
  * to resolve, just add git bin path to env variables PATH
  * restart cmd

#### Reference

<https://superuser.com/questions/1296024/windows-ssh-permissions-for-private-key-are-too-open>

### vagrant cannot find powershell

```cmd
The version of powershell currently installed on this host is less than
the required minimum version. Please upgrade the installed version of
powershell to the minimum required version and run the command again.

  Installed version: N/A
  Minimum required version: 3
```

* install the latest powershell (i was using powershell 7)
  * once installed, the path will set to PATH
* go to C:\Program Files (x86)\PowerShell\7\ and copy pwsh.exe to powershell.exe

## Sample

### Vagrantfile for Docker

* make sure docker is install on host
* create with sample file below
* run vagrant "vagrant up --provider=docker"
* open browser on host server and visit <http://localhost:19000/>

```vagrantfile
ENV['VAGRANT_DEFAULT_PROVIDER'] ||= 'docker'

Vagrant.configure("2") do |config|
  config.vm.provider "docker" do |d|
    d.image = "sonarqube:latest"
    d.ports = ["19000:9000"]
    d.name = "sonarqube-container"
  end
end
```
