---
layout: single
#classes: wide
title:  "Nginx"
date:   2021-10-15 18:00:50 +0800
categories: nginx
allow_different_nesting: true
toc: true
toc_label: "In this page"
toc_icon: " "
toc_sticky: true
sidebar:
  nav: "about"
---

## docker

<https://www.digitalocean.com/community/tutorials/how-to-run-nginx-in-a-docker-container-on-ubuntu-14-04>

* mkdir -p  ~/docker-nginx/html
* cd  ~/docker-nginx/html
* touch index.html (edit as you might)
* sudo docker run --name docker-nginx -p 80:80 -d -v ~/docker-nginx/html:/usr/share/nginx/html nginx
* cd ~/docker-nginx
* sudo docker cp docker-nginx:/etc/nginx/conf.d/default.conf default.conf
* edit default.conf (appropriately)
* docker stop docker-nginx
* docker rm docker-nginx
* sudo docker run --name docker-nginx -p 80:80 -v ~/docker-nginx/html:/usr/share/nginx/html -v ~/docker-nginx/default.conf:/etc/nginx/conf.d/default.conf -d nginx

### Default Configuration (Full)

<https://www.nginx.com/resources/wiki/start/topics/examples/full/>

#### Virtual Host/Proxy

* nginx.conf

```txt
server {
        listen  80;
        server_name     gdc2.tyk.dashboard.sde;
        access_log      /var/log/nginx/gdc2.tyk.dashboard.sde.log       main;
        location / {
                proxy_pass      http://192.168.152.55:13000;
        }
}
```

```txt
server {
        listen  80;
        server_name     gdc2.tyk.gateway.sde;
        access_log      /var/log/nginx/gdc2.tyk.gateway.sde.log main;
        location / {
                proxy_pass      http://192.168.152.55:18080;
        }
}
```

### Self Signed Certificte Docker

<https://www.johnmackenzie.co.uk/posts/using-self-signed-ssl-certificates-with-docker-and-nginx/>

* create self signed certificate

```ssh
openssl req -newkey rsa:2048 -nodes -keyout nginx.key -x509 -days 365 -out nginx.crt
Generating a RSA private key
........................................................................................+++++
.......+++++
writing new private key to 'nginx.private.key'
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:SG
State or Province Name (full name) [Some-State]:SG
Locality Name (eg, city) []:SG
Organization Name (eg, company) [Internet Widgits Pty Ltd]:SG
Organizational Unit Name (eg, section) []:SG
Common Name (e.g. server FQDN or YOUR name) []:SG
Email Address []:test@test.com
```

* create docker-compose.yml with content below

```yaml
version: '2'
services:
  nginx:
    image: nginx:1.15
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/nginx.crt:/etc/nginx/nginx.crt
      - ./nginx/nginx.key:/etc/nginx/nginx.key
    ports:
    - "8080:80"
    - "9443:9443"
  sonarqube1:
    image: sonarqube:latest
    ports:
    - "19000:9000"

networks:
  default:
    external: true
    name: keycloak_default
```

* create nginx.conf with content below

```txt
events {
  worker_connections  4096;  ## Default: 1024
}

http {
    server { # This new server will watch for traffic on 443
        listen              9443 ssl;
        server_name         sonarqube1;
        ssl_certificate     /etc/nginx/nginx.crt;
        ssl_certificate_key /etc/nginx/nginx.key;
        location / {
            proxy_pass      http://172.19.0.5:9000; # can only use ip; get this ip by inspecting docker network
        }
    }
}
```

* docker-compose up -d
